{"ast":null,"code":"var _jsxFileName = \"/Users/gauravkumar/Documents/quotient/src/components/DarkModeToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  console.log(isDarkMode, 'isDarkModeisDarkMode');\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDarkMode]);\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.documentElement.classList.add('dark');\n    }\n  }, []);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDarkMode,\n    children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeToggle, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DarkModeToggle","_s","isDarkMode","setIsDarkMode","console","log","document","documentElement","classList","add","localStorage","setItem","remove","storedTheme","getItem","toggleDarkMode","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gauravkumar/Documents/quotient/src/components/DarkModeToggle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DarkModeToggle = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  console.log(isDarkMode,'isDarkModeisDarkMode')\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDarkMode]);\n\n  useEffect(() => {\n      const storedTheme = localStorage.getItem('theme');\n      if (storedTheme === 'dark') {\n          setIsDarkMode(true);\n          document.documentElement.classList.add('dark');\n      }\n  }, []);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <button onClick={toggleDarkMode}>\n      {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n    </button>\n  );\n};\n\nexport default DarkModeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnDQ,OAAO,CAACC,GAAG,CAACH,UAAU,EAAC,sBAAsB,CAAC;EAE9CL,SAAS,CAAC,MAAM;IACd,IAAIK,UAAU,EAAE;MACdI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLL,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACI,MAAM,CAAC,MAAM,CAAC;MACjDF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhBL,SAAS,CAAC,MAAM;IACZ,MAAMgB,WAAW,GAAGH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IACjD,IAAID,WAAW,KAAK,MAAM,EAAE;MACxBV,aAAa,CAAC,IAAI,CAAC;MACnBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAClD;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA;IAAQiB,OAAO,EAAED,cAAe;IAAAE,QAAA,EAC7Bf,UAAU,GAAG,YAAY,GAAG;EAAW;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEb,CAAC;AAACpB,EAAA,CA/BID,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}