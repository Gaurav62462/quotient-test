{"ast":null,"code":"var _jsxFileName = \"/Users/gauravkumar/Documents/quotient/src/components/ColumnChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnChart = () => {\n  _s();\n  const isDarkMode = useContext(DarkModeContext);\n  const textColor = isDarkMode ? '#ffffff' : '#000000';\n  const colOptions = {\n    chart: {\n      type: 'column',\n      backgroundColor: isDarkMode ? '#010D19' : '#F7F8F9',\n      style: {\n        color: isDarkMode ? 'white' : 'black'\n      }\n    },\n    title: {\n      text: 'Revenue',\n      style: {\n        color: textColor\n      }\n    },\n    xAxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      labels: {\n        style: {\n          color: textColor\n        }\n      }\n    },\n    colors: ['#513CCE'],\n    yAxis: {\n      // categories:[],\n      title: {\n        text: ''\n      }\n    },\n    plotOptions: {\n      pie: {\n        // allowPointSelect: true,\n        borderRadius: 0,\n        // cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          // format: '{point.percentage:.1f}',\n          // distance:-18,\n          rotation: -90,\n          y: 10,\n          style: {\n            fontSize: '13px',\n            fontWeight: '500',\n            color: '#ffffff'\n          }\n        }\n      }\n    },\n    series: [{\n      type: 'column',\n      name: 'Revenue',\n      data: [2394, 5454, 4343, 3442, 4554, 1211, 3232, 4333, 3232, 1212, 2222, 4554],\n      color: isDarkMode ? '#8378FF' : '#513CCE',\n      borderWidth: 0,\n      edgeWidth: 30\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: colOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ColumnChart, \"1g3eLk+0NqW2+SCEyhHHiIp60O4=\");\n_c = ColumnChart;\nexport default ColumnChart;\nvar _c;\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"names":["React","useContext","Highcharts","HighchartsReact","DarkModeContext","jsxDEV","_jsxDEV","ColumnChart","_s","isDarkMode","textColor","colOptions","chart","type","backgroundColor","style","color","title","text","xAxis","categories","labels","colors","yAxis","plotOptions","pie","borderRadius","dataLabels","enabled","rotation","y","fontSize","fontWeight","series","name","data","borderWidth","edgeWidth","className","children","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gauravkumar/Documents/quotient/src/components/ColumnChart.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { DarkModeContext } from '../context/DarkModeContext';\n\nconst ColumnChart: React.FC = () => {\n    const isDarkMode = useContext(DarkModeContext);\n    const textColor = isDarkMode ? '#ffffff' : '#000000';\n\n  const colOptions: Highcharts.Options = {\n    chart: {\n        type: 'column',\n        backgroundColor: isDarkMode ? '#010D19' : '#F7F8F9',\n        style: {\n          color: isDarkMode ?  'white' : 'black',\n        },\n      },\n      title: {\n        text: 'Revenue',\n        style: {\n          color: textColor,\n        },\n      },\n      xAxis: {\n        categories:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\n        labels: {\n          style: {\n            color: textColor,\n          },\n        },\n      },\n      colors:['#513CCE'],\n      yAxis: {\n        // categories:[],\n        title :{\n            text: ''\n        }\n      },\n      plotOptions: {\n        pie: {\n          // allowPointSelect: true,\n          borderRadius:0,\n          // cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            // format: '{point.percentage:.1f}',\n            // distance:-18,\n            rotation:-90,\n            y: 10,\n            style:{\n              fontSize:'13px',\n              fontWeight:'500',\n              color:'#ffffff'\n            }\n          }\n        }\n      },\n      series :[\n        {\n            type:'column',\n            name:'Revenue',\n            data: [2394,5454,4343,3442,4554,1211,3232,4333,3232,1212,2222,4554],\n            color:  isDarkMode ? '#8378FF' : '#513CCE',\n            borderWidth:0,\n            edgeWidth:30\n        }\n      ]\n  }\n  return (\n    <div className=\"\">\n      <HighchartsReact highcharts={Highcharts} options={colOptions} />\n    </div>\n  );\n};\n\nexport default ColumnChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,eAAe,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,UAAU,GAAGR,UAAU,CAACG,eAAe,CAAC;EAC9C,MAAMM,SAAS,GAAGD,UAAU,GAAG,SAAS,GAAG,SAAS;EAEtD,MAAME,UAA8B,GAAG;IACrCC,KAAK,EAAE;MACHC,IAAI,EAAE,QAAQ;MACdC,eAAe,EAAEL,UAAU,GAAG,SAAS,GAAG,SAAS;MACnDM,KAAK,EAAE;QACLC,KAAK,EAAEP,UAAU,GAAI,OAAO,GAAG;MACjC;IACF,CAAC;IACDQ,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfH,KAAK,EAAE;QACLC,KAAK,EAAEN;MACT;IACF,CAAC;IACDS,KAAK,EAAE;MACLC,UAAU,EAAC,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC;MACpFC,MAAM,EAAE;QACNN,KAAK,EAAE;UACLC,KAAK,EAAEN;QACT;MACF;IACF,CAAC;IACDY,MAAM,EAAC,CAAC,SAAS,CAAC;IAClBC,KAAK,EAAE;MACL;MACAN,KAAK,EAAE;QACHC,IAAI,EAAE;MACV;IACF,CAAC;IACDM,WAAW,EAAE;MACXC,GAAG,EAAE;QACH;QACAC,YAAY,EAAC,CAAC;QACd;QACAC,UAAU,EAAE;UACVC,OAAO,EAAE,IAAI;UACb;UACA;UACAC,QAAQ,EAAC,CAAC,EAAE;UACZC,CAAC,EAAE,EAAE;UACLf,KAAK,EAAC;YACJgB,QAAQ,EAAC,MAAM;YACfC,UAAU,EAAC,KAAK;YAChBhB,KAAK,EAAC;UACR;QACF;MACF;IACF,CAAC;IACDiB,MAAM,EAAE,CACN;MACIpB,IAAI,EAAC,QAAQ;MACbqB,IAAI,EAAC,SAAS;MACdC,IAAI,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;MACnEnB,KAAK,EAAGP,UAAU,GAAG,SAAS,GAAG,SAAS;MAC1C2B,WAAW,EAAC,CAAC;MACbC,SAAS,EAAC;IACd,CAAC;EAEP,CAAC;EACD,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,EAAE;IAAAC,QAAA,eACfjC,OAAA,CAACH,eAAe;MAACqC,UAAU,EAAEtC,UAAW;MAACuC,OAAO,EAAE9B;IAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACrC,EAAA,CApEID,WAAqB;AAAAuC,EAAA,GAArBvC,WAAqB;AAsE3B,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}